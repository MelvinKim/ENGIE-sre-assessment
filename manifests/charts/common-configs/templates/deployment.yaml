apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-deployment"
  labels:
    app: "{{ .Release.Name }}-app"
spec:
  replicas: {{ .Values.apiserver.replicas }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-app"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-app"
    spec:
      imagePullSecrets:
        - name: pullsecret
      {{- with .Values.apiserver.containers }}
      containers:
        {{- range .}}
        - name: {{ .name }}
          image: {{ .image }}
          imagePullPolicy: {{ .imagePullPolicy }}
          {{- if .livenessProbe.enabled }}
          {{- with .livenessProbe }}
          # used to check if a container is healthy
          # if a liveness probe fails the container is killed and restarted
          livenessProbe:
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
          {{- end }}
          {{- end }}
          {{- if .readinessProbe.enabled }}
          {{- with .readinessProbe }}
          # used to check when container is ready to start accepting traffic
          # if a readiness probe fails the container is removed from the service endpoints, but not killed
          readinessProbe:
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
          {{- end }}
          {{- end }}
          resources:
            requests:
              cpu: {{ .resources.requests.cpu }}
              memory: {{ .resources.requests.memory }}
            limits:
              cpu: {{ .resources.limits.cpu }}
              memory: {{ .resources.limits.memory }}
          ports:
            {{- range .ports }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
            {{- end }}
          {{- if hasKey . "volumeMounts" }}
          volumeMounts:
            {{- range .volumeMounts}}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- with .Values.apiserver.volumes}}
      volumes:
        {{- range . }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap.name }}
        {{- end }}
      {{- end }}